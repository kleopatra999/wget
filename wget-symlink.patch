diff -urN wget-1.5.3.org/src/ChangeLog wget-1.5.3/src/ChangeLog
--- wget-1.5.3.org/src/ChangeLog	Sat Dec 16 11:49:07 2000
+++ wget-1.5.3/src/ChangeLog	Sat Dec 16 11:49:41 2000
@@ -1,3 +1,17 @@
+1999-06-19  Charles Levert  <charles@comm.polymtl.ca>
+
+	* ftp.c (touch_and_chmod): New static function from code in
+	ftp_retrieve_list.
+
+	* ftp.c (ftp_retrieve_list): use touch_and_chmod instead.
+
+	* ftp.c (ftp_retrieve_dirs): chmod 0700 each dir, process it,
+	and touch_and_chmod it properly afterwards.
+
+1999-06-14  Charles Levert  <charles@comm.polymtl.ca>
+
+	* ftp.c (ftp_retrieve_list): Do not use chmod on a symlink.
+
 1998-09-21  Hrvoje Niksic  <hniksic@srce.hr>
 
 	* version.c: Wget 1.5.3 is released.
diff -urN wget-1.5.3.org/src/ftp.c wget-1.5.3/src/ftp.c
--- wget-1.5.3.org/src/ftp.c	Sat Dec 16 11:49:07 2000
+++ wget-1.5.3/src/ftp.c	Sat Dec 16 11:50:34 2000
@@ -1112,6 +1112,7 @@
 static struct fileinfo *delelement PARAMS ((struct fileinfo *,
 					    struct fileinfo **));
 static void freefileinfo PARAMS ((struct fileinfo *f));
+static void touch_and_chmod PARAMS ((char *local_name, struct fileinfo *f));
 
 /* Retrieve a list of files given in struct fileinfo linked list.  If
    a file is a symbolic link, do not retrieve it, but rather try to
@@ -1267,24 +1268,8 @@
 	  break;
 	}	/* switch */
 
-      /* Set the time-stamp information to the local file.  Symlinks
-	 are not to be stamped because it sets the stamp on the
-	 original.  :( */
-      if (!opt.dfp
-	  && !(f->type == FT_SYMLINK && !opt.retr_symlinks)
-	  && f->tstamp != -1
-          && dlthis
-	  && file_exists_p (u->local))
-	{
-	  touch (u->local, f->tstamp);
-	}
-      else if (f->tstamp == -1)
-	logprintf (LOG_NOTQUIET, _("%s: corrupt time-stamp.\n"), u->local);
-
-      if (f->perms && f->type == FT_PLAINFILE && dlthis)
-	chmod (u->local, f->perms);
-      else
-	DEBUGP (("Unrecognized permissions for %s.\n", u->local));
+     if (!opt.dfp && dlthis)
+	 touch_and_chmod (u->local, f);
 
       free (u->local);
       u->local = olocal;
@@ -1313,6 +1298,8 @@
 ftp_retrieve_dirs (struct urlinfo *u, struct fileinfo *f, ccon *con)
 {
   char *odir;
+  char *ofile;
+  char *ulocal;
   char *current_container = NULL;
   int current_length = 0;
 
@@ -1324,6 +1311,12 @@
 	break;
       if (f->type != FT_DIRECTORY)
 	continue;
+
+      ofile = u->file;
+      u->file = f->name;
+      ulocal = url_filename (u);
+      u->file = ofile;
+
       odir = u->dir;
       len = 1 + strlen (u->dir) + 1 + strlen (f->name) + 1;
       /* Allocate u->dir off stack, but reallocate only if a larger
@@ -1340,12 +1333,23 @@
 	{
 	  logprintf (LOG_VERBOSE, _("\
 Not descending to `%s' as it is excluded/not-included.\n"), u->dir);
+	  free (ulocal);
 	  u->dir = odir;
 	  continue;
 	}
       con->st &= ~DONE_CWD;
+
+      /* Make sure we can write in there.  */
+      if (!opt.dfp)
+	chmod (ulocal, 0700);
+
       ftp_retrieve_glob (u, con, GETALL);
-      /* Set the time-stamp?  */
+
+      /* Now that everything that had to be done there is done...  */
+      if (!opt.dfp)
+	touch_and_chmod (ulocal, f);
+
+      free (ulocal);
       u->dir = odir;
     }
   if (opt.quota && opt.downloaded > opt.quota)
@@ -1561,5 +1565,28 @@
 	free (f->linkto);
       free (f);
       f = next;
+    }
+}
+
+static void
+touch_and_chmod(char *local_name, struct fileinfo *f)
+{
+  /* Set the time-stamp information to the local file.  Symlinks
+     are not to be stamped because it sets the stamp on the
+     original.  :( */
+  /* Symlinks always have 0777 perms.  Chmod would affect
+     linked file. */
+  if (!(f->type == FT_SYMLINK && !opt.retr_symlinks)
+      && file_exists_p (local_name))
+    {
+      if (f->tstamp != -1)
+	touch (local_name, f->tstamp);
+      else
+	logprintf (LOG_NOTQUIET, _("%s: corrupt time-stamp.\n"), local_name);
+
+      if (f->perms)
+	chmod (local_name, f->perms);
+      else
+	DEBUGP (("Unrecognized permissions for %s.\n", local_name));
     }
 }
